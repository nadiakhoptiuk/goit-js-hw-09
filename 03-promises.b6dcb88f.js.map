{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAoDA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAQC,QAAU,IAAIC,SAAQ,SAACC,EAASC,GACtCC,YAAW,WACLP,EACFK,EAAQ,CAAEP,WAAUC,UAEpBO,EAAO,CAAER,WAAUC,YAEpBA,OA5DM,CACXS,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAwBC,GACtBA,EAAIC,iBACJ,IAAgCC,GAKTN,EALyBI,EAAIG,cAM9CC,EAAW,IAAIC,SAAST,GAExBU,EAAa,GACnBF,EAASG,SAAQ,SAACC,EAAOC,GACvBH,EAAWG,GAAQC,OAAOF,MAGrBF,GAbCnB,EAAwBe,EAAxBf,MAAOwB,EAAiBT,EAAjBS,KAAMC,EAAWV,EAAXU,OAKvB,IAAyBhB,EACjBQ,EAEAE,GAsBR,YAA2BO,UAAAC,OAAA,YAAAD,UAAA,GAAeA,UAAA,GAAF,IACpBE,KAAI,SAAAC,G,OACpB/B,EAD+B+B,EAAR9B,SAAe8B,EAAL7B,OAE9B8B,MAAK,SAAAC,G,IAAGhC,EAAQgC,EAARhC,SAAUC,EAAK+B,EAAL/B,MACjBJ,EAAAoC,OAAOC,QAAQ,qBAAoCC,OAAfnC,EAAS,QAAYmC,OAANlC,EAAM,UAE1DmC,OAAM,SAAAJ,G,IAAGhC,EAAQgC,EAARhC,SAAUC,EAAK+B,EAAL/B,MAClBJ,EAAAoC,OAAOI,QAAQ,oBAAmCF,OAAfnC,EAAS,QAAYmC,OAANlC,EAAM,aAnC9DqC,CAcF,SAA8BrC,EAAOwB,EAAMC,GAGzC,IAFA,IAAMa,EAAqB,GAElBC,EAAI,EAAGA,EAAId,EAAQc,GAAK,EAAG,CAClC,IAAMC,EAAexC,EAAQuC,EAAIf,EAC3BiB,EAAwB,GAC9BA,EAAsB1C,SAAWwC,EAAI,EACrCE,EAAsBzC,MAAQwC,EAC9BF,EAAmBI,KAAKD,GAG1B,OAAOH,EA1ByBK,CAAqB3C,EAAOwB,EAAMC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', createPromises);\n\nfunction createPromises(evt) {\n  evt.preventDefault();\n  const { delay, step, amount } = getDataFromForm(evt.currentTarget);\n  const dataArrayForEachPromise = calculatePromiseData(delay, step, amount);\n  createAllPromises(dataArrayForEachPromise);\n}\n\nfunction getDataFromForm(form) {\n  const formData = new FormData(form);\n\n  const dataObject = {};\n  formData.forEach((value, name) => {\n    dataObject[name] = Number(value);\n  });\n\n  return dataObject;\n}\n\nfunction calculatePromiseData(delay, step, amount) {\n  const dataArrayForCreate = [];\n\n  for (let i = 0; i < amount; i += 1) {\n    const delayForEach = delay + i * step;\n    const dataObjForEachPromise = {};\n    dataObjForEachPromise.position = i + 1;\n    dataObjForEachPromise.delay = delayForEach;\n    dataArrayForCreate.push(dataObjForEachPromise);\n  }\n\n  return dataArrayForCreate;\n}\n\nfunction createAllPromises(arrayOfObj = []) {\n  return arrayOfObj.map(({ position, delay }) =>\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      })\n  );\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return (promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  }));\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","promise","Promise","resolve","reject","setTimeout","form","document","querySelector","addEventListener","evt","preventDefault","ref","currentTarget","formData","FormData","dataObject","forEach","value","name","Number","step","amount","arguments","length","map","param1","then","param","Notify","success","concat","catch","failure","$ce04d3a99e08e73b$var$createAllPromises","dataArrayForCreate","i","delayForEach","dataObjForEachPromise","push","$ce04d3a99e08e73b$var$calculatePromiseData"],"version":3,"file":"03-promises.b6dcb88f.js.map"}