{"mappings":"oeACA,IAAAA,EAAAC,EAAA,UAEa,CACXC,KAAMC,SAASC,cAAc,WAI1BF,KAAKG,iBAAiB,UAGuB,SAA1BC,GAEsBA,EAAxCC,iBAG+C,MAA7CC,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,GAU6B,SAA3BR,GACvB,MAAMS,EAAW,IAAIC,SAASV,GAExBW,EAAa,GAKnB,OAJAF,EAASG,SAAQ,CAACC,EAAOC,KACvBH,EAAWG,GAAQC,OAAOF,MAGrBF,EAlByBK,CAAgBZ,EAAIa,gBAqCF,SAAzBC,EAAa,IAC/BA,EAAWC,KAAI,EAAGC,SAAAC,EAAUf,MAAAgB,KAarC,SAAuBF,EAAUd,GAC/B,MAAMiB,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEP,E,MAAUd,IAEpBsB,EAAO,C,SAAER,E,MAAUd,MAEpBA,MArB8EwB,CAAnET,EAAUC,GACrBS,MAAK,EAACX,SAAEA,EAAQd,MAAEA,MACjBR,EAAAkC,OAAOC,QAAQ,qBAAqBb,QAAed,UAEpD4B,OAAM,EAACd,SAAEA,EAAQd,MAAEA,MAClBR,EAAAkC,OAAOG,QAAQ,oBAAoBf,QAAed,YAvCZ8B,CAgBuB,SAAvC9B,EAAOC,EAAMC,GACzC,MAAM6B,EAAqB,GAE3B,IAAK,IAAIC,EAAI,EAAGA,EAAI9B,EAAQ8B,GAAK,EAAG,CAClC,MAAMC,EAAejC,EAAQgC,EAAI/B,EAC3BiC,EAAwB,GAC9BA,EAAsBpB,SAAWkB,EAAI,EACrCE,EAAsBlC,MAAQiC,EAC9BF,EAAmBI,KAAKD,GAG1B,OAAOH,EA9ByBK,CAAqBpC,EAAOC,EAAMC","sources":["src/js/03-promises.js"],"sourcesContent":["// імпортуємо бібліотеку notiflix для сповіщень\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\n// додаємо слухача на форму\nrefs.form.addEventListener('submit', createPromises);\n\n// загальна функція, яка викликається при відправленні форми\nfunction createPromises(evt) {\n  // скидаємо налаштування (перезавантаження сторінки)\n  evt.preventDefault();\n\n  // отримуємо в об'єкті та деструктуризуємо в змінні дані з форми\n  const { delay, step, amount } = getDataFromForm(evt.currentTarget);\n\n  // обчислюємо вихідні дані для кожного проміса\n  const dataArrayForEachPromise = calculatePromiseData(delay, step, amount);\n\n  // створюємо проміси за обчисленими вихідними даними\n  createAllPromises(dataArrayForEachPromise);\n}\n\n// функція, яка забирає з форми дані і повертає їх у вигляді об'єкта\nfunction getDataFromForm(form) {\n  const formData = new FormData(form);\n\n  const dataObject = {};\n  formData.forEach((value, name) => {\n    dataObject[name] = Number(value);\n  });\n\n  return dataObject;\n}\n\n// функція, яка обчислює вихідні дані для кожного проміса (в об'єкті) і поміщає їх в масив\nfunction calculatePromiseData(delay, step, amount) {\n  const dataArrayForCreate = [];\n\n  for (let i = 0; i < amount; i += 1) {\n    const delayForEach = delay + i * step;\n    const dataObjForEachPromise = {};\n    dataObjForEachPromise.position = i + 1;\n    dataObjForEachPromise.delay = delayForEach;\n    dataArrayForCreate.push(dataObjForEachPromise);\n  }\n\n  return dataArrayForCreate;\n}\n\n// функція, яка створює проміси за обчисленими вихідними даними\nfunction createAllPromises(arrayOfObj = []) {\n  return arrayOfObj.map(({ position, delay }) =>\n    // створюємо проміс для кожного елемента масива, викликаючи функцію для створення одного проміса:\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      })\n  );\n}\n\n// функція, яка створює один проміс за вихідними даними\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","form","document","querySelector","addEventListener","evt","preventDefault","delay","step","amount","formData","FormData","dataObject","forEach","value","name","Number","$47d4ff9957288465$var$getDataFromForm","currentTarget","arrayOfObj","map","position","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$createPromise","then","Notify","success","catch","failure","$47d4ff9957288465$var$createAllPromises","dataArrayForCreate","i","delayForEach","dataObjForEachPromise","push","$47d4ff9957288465$var$calculatePromiseData"],"version":3,"file":"03-promises.7dbecbdf.js.map"}